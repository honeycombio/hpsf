name: OTel_GRPC_Receiver
kind: OTelGRPCReceiver
summary: Receives OpenTelemetry gRPC traces
description: |
  Imports telemetry to Honeycomb from OpenTelemetry gRPC traces (not HTTP).
ports:
  - name: Traces
    direction: output
    type: OTelTraces
properties:
  - name: Host
    summary: The hostname or IP address on which to listen
    description: |
      Hostname or IP address on which to listen for incoming traces.
      It is recommended not to change the default unless
      you know what you're doing.
    type: string
    validations: [nonblank]
    default: ${STRAWS_COLLECTOR_POD_IP}
  - name: Port
    summary: The port on which to listen.
    description: |
      The port on which to listen for incoming traces.
      For gRPC in OTel, this is normally 4317.
    type: string
    validations: [nonblank, url]
    default: 4317
templates:
  - kind: collector_config
    name: OTelGRPCReceiver_CollectorConfig
    format: collector
    meta:
      componentSection: receivers
      signalType: traces # we'll generate a name for each pipeline if there's more than 1
      collectorComponentName: otlp  # required receiver we'll check against configured collector
    data:
      - key: "{{ .ComponentName }}.protocols.grpc.endpoint"
        value: "{{ firstNonblank .HProps.Host .User.Host .Props.Host.Default }}:{{ firstNonblank .HProps.Port .User.Port .Props.Port.Default }}"
      # service is not part of the template, it's generated automatically by the collectorConfig