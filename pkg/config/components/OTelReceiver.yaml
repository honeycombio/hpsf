name: otel_receiver
kind: OTelReceiver
summary: Receives OpenTelemetry traces via gRPC or HTTP or both
description: |
  Imports telemetry to Honeycomb from OpenTelemetry traces via gRPC or HTTP.
  This receiver can be configured to listen on both gRPC and HTTP, or just one.
ports:
  - name: Traces
    direction: output
    type: OTelTraces
  - name: Metrics
    direction: output
    type: OTelMetrics
  - name: Logs
    direction: output
    type: OTelLogs
properties:
  - name: Host
    summary: The hostname or IP address on which to listen
    description: |
      Hostname or IP address on which to listen for incoming traces.
      It is recommended not to change the default unless
      you know what you're doing.
    type: string
    validations: [nonblank]
    default: ${STRAWS_COLLECTOR_POD_IP}
  - name: GRPCPort
    summary: The port on which to listen for gRPC traffic.
    description: |
      The port on which to listen for incoming gRPC traces.
      The OTel default is 4317. Set to 0 to disable gRPC.
    type: integer
    validations: [integer]
    default: 4317
  - name: HTTPPort
    summary: The port on which to listen for HTTP traffic.
    description: |
      The port on which to listen for incoming HTTP traces.
      The OTel default is 4318. Set to 0 to disable HTTP.
    type: integer
    validations: [integer]
    default: 4318
templates:
  - kind: collector_config
    name: OTelGRPCReceiver_CollectorConfig
    format: collector
    meta:
      componentSection: receivers
      signalType: traces # we'll generate a name for each pipeline if there's more than 1
      collectorComponentName: otlp  # required receiver we'll check against configured collector
    data:
      - key: "{{ .ComponentName }}.protocols.grpc.endpoint"
        value: "{{ firstNonblank .HProps.Host .User.Host .Props.Host.Default }}:{{ firstNonblank .HProps.GRPCPort .User.GRPCPort .Props.GRPCPort.Default }}"
        suppress_if: "{{ eq .HProps.GRPCPort 0 }}"
      - key: "{{ .ComponentName }}.protocols.http.endpoint"
        value: "{{ firstNonblank .HProps.Host .User.Host .Props.Host.Default }}:{{ firstNonblank .HProps.HTTPPort .User.HTTPPort .Props.HTTPPort.Default }}"
        suppress_if: "{{ eq .HProps.HTTPPort 0 }}"
      # service is not part of the template, it's generated automatically by the collectorConfig