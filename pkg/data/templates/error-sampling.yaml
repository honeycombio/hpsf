name: Error-Focused Sampling
kind: TemplateErrorSampling
version: v0.1.0
summary: Prioritized sampling for error traces with fallback sampling for normal traces
description: |
  This template demonstrates the power of meta components by implementing
  a sophisticated sampling strategy that prioritizes error traces while
  maintaining overall throughput control. It uses a meta component to
  group error detection with specialized sampling, plus a fallback
  sampler for normal traces.
components:
  - name: OTel Receiver 1
    kind: OTelReceiver
  - name: Start Sampling 1
    kind: SamplingSequencer
  # Meta component that combines error condition + specialized sampling
  - name: Error Sampling Group 1
    kind: ErrorSamplingGroup
    properties:
      - name: GoalThroughputPerSec
        value: 100
      - name: ErrorFieldName
        value: "error"
      - name: FieldList
        value: ["service.name", "http.method", "http.status_code"]
    children:
      - name: Error Detection
        kind: FieldExistsCondition
        properties:
          - name: FieldName
            value: "error"
          - name: Operator
            value: "exists"
      - name: Error Sampler
        kind: EMAThroughputSampler
        properties:
          - name: GoalThroughputPerSec
            value: 100
          - name: FieldList
            value: ["service.name", "http.method", "http.status_code"]
  # Fallback sampler for non-error traces
  - name: Default Sampler 1
    kind: DeterministicSampler
    properties:
      - name: SampleRate
        value: 10
  - name: Honeycomb Exporter 1
    kind: HoneycombExporter
connections:
  - source:
      component: OTel Receiver 1
      port: Traces
      type: OTelTraces
    destination:
      component: Start Sampling 1
      port: Traces
      type: OTelTraces
  # First rule: sample errors with high priority
  - source:
      component: Start Sampling 1
      port: Rule 1
      type: SampleData
    destination:
      component: Error Sampling Group 1
      port: Sample
      type: SampleData
  # Second rule: fallback sampling for everything else
  - source:
      component: Start Sampling 1
      port: Rule 2
      type: SampleData
    destination:
      component: Default Sampler 1
      port: Sample
      type: SampleData
  # Both samplers output to the same exporter
  - source:
      component: Error Sampling Group 1
      port: Events
      type: HoneycombEvents
    destination:
      component: Honeycomb Exporter 1
      port: Events
      type: HoneycombEvents
  - source:
      component: Default Sampler 1
      port: Events
      type: HoneycombEvents
    destination:
      component: Honeycomb Exporter 1
      port: Events
      type: HoneycombEvents
layout:
  components:
    - name: OTel Receiver 1
      position:
        x: -400
        y: 0
    - name: Start Sampling 1
      position:
        x: -160
        y: 0
    - name: Error Sampling Group 1
      position:
        x: 120
        y: -80
    - name: Default Sampler 1
      position:
        x: 120
        y: 80
    - name: Honeycomb Exporter 1
      position:
        x: 400
        y: 0