kind: TraceConverter
name: Trace Converter
style: receiver
type: base
status: development
version: v0.1.0
summary: Exports telemetry to Refinery via HTTP for further processing.
description: |
  Exports OTel telemetry via HTTP.
  This exporter forwards the data to Refinery over HTTP for processing.
tags:
  - category:converter
  - service:refinery
  - signal:OTelTraces
  - signal:OTelLogs
  - signal:HoneycombEvents
  - vendor:Honeycomb
ports:
  - name: Traces
    direction: input
    type: OTelTraces
  - name: Logs
    direction: input
    type: OTelLogs
  - name: Events
    direction: output
    type: HoneycombEvents
properties:
  - name: Host
    summary: The hostname or IP address on which to listen.
    description: |
      Hostname or IP address on which to listen for incoming traffic.
      It is recommended not to change the default unless
      you know what you're doing.
    type: string
    validations: [nonblank]
    default: ${STRAWS_REFINERY_POD_IP}
    advanced: true
  - name: Port
    summary: The port on which Refinery is listening for HTTP traffic.
    description: |
      The port on which Refinery listens for incoming HTTP traffic.
      The OTel default is 4318. Set to 0 to disable HTTP.
    type: int
    validations: [int]
    default: 4318
    advanced: true
  - name: Headers
    summary: Headers to emit when sending HTTP traffic.
    description: |
      Sending data to a backend may require additional headers to be
      configured. This properties supports sending a map of header keys and
      values.
    type: map
    validations: []
  - name: Insecure
    summary: Provide a way to disable TLS export.
    description: |
      Can be used to send data without TLS.
    type: bool
    validations: [bool]
    default: false
    advanced: true
templates:
  - kind: collector_config
    name: otel_receiver_collector
    format: collector
    meta:
      componentSection: exporters
      signalTypes: [traces, metrics, logs]
      collectorComponentName: otlphttp
    data:
      - key: "{{ .ComponentName }}.endpoint"
        value: "{{ firstNonZero .HProps.Host .User.Host .Props.Host.Default }}:{{ firstNonZero .HProps.Port .User.Port .Props.Port.Default }}"
      - key: "{{ .ComponentName }}.tls.insecure"
        value: "{{ .HProps.Insecure | encodeAsBool }}"
        suppress_if: "{{ not .HProps.Insecure }}"
      - key: "{{ .ComponentName }}.headers"
        value: "{{ .HProps.Headers | encodeAsMap }}"
        suppress_if: "{{ not .HProps.Headers }}"
      # service is not part of the template, it's generated automatically by the collectorConfig