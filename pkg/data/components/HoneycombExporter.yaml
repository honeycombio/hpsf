kind: HoneycombExporter
name: Send to Honeycomb
style: exporter
logo: honeycomb
type: base
status: alpha
version: v0.1.0
summary: Sends telemetry to Honeycomb's data store for real-time analysis.
description: |
  This component sends traces, logs, metrics, and Honeycomb-formatted 
  events to the Honeycomb's data store for real-time analysis.
tags:
  - category:exporter
  - service:refinery
  - signal:HoneycombEvents
  - vendor:Honeycomb
ports:
  # inputs
  - name: Events
    direction: input
    type: HoneycombEvents
  - name: Traces
    direction: input
    type: OTelTraces
  - name: Logs
    direction: input
    type: OTelLogs
  - name: Metrics
    direction: input
    type: OTelMetrics
properties:
  - name: APIKey
    summary: The API key to use to authenticate with Honeycomb.
    description: |
      The API key to use to authenticate with Honeycomb.
    type: string
    validations:
      - noblanks
    default: ${HTP_EXPORTER_APIKEY}
    advanced: true
  - name: MetricsDataset
    summary: The Honeycomb dataset metrics will be sent to.
    description: |
      The Honeycomb dataset metrics will be sent to.
      The default value is 'metrics'.
    type: string
    validations:
      - noblanks
    default: metrics
    advanced: true
  - name: APIEndpoint
    summary: The hostname or IP of the Honeycomb API endpoint.
    description: |
      The hostname or IP of the Honeycomb API endpoint
      This is normally api.honeycomb.io, but can be overridden.
    type: string
    validations:
      - noblanks
      - hostorip
    default: api.honeycomb.io
    advanced: true
  - name: APIPort
    summary: The port on which to send traffic.
    description: |
      The port on which to send outgoing traffic. Default is 443, which is
      the value expected by Honeycomb.
    type: int
    validations:
      - inrange(1, 65535)
    default: 443
    advanced: true
  - name: Mode
    summary: Configures when to use the the APIKey.
    description: |
      Allows configuring when the exporter uses the APIKey.
      Valid values are 'all' and 'none'.
      The value 'none' means that the APIKey will
      not be used. Defaults to 'all', which means all
      the traffic will be exported using the configured APIKey.
    type: string
    subtype: oneof(all, none)
    validations:
      - oneof(all, none)
    default: all
    advanced: true
  - name: Insecure
    summary: Provide a way to disable TLS export.
    description: |
      Can be used to send data without TLS.
    type: bool
    subtype: label("Disable TLS export")
    default: false
    advanced: true
  - name: BatchTimeout
    summary: How long to wait to before sending a batch, regardless of size.
    description: |
      Configure how long to wait before sending a batch. The batch will be sent after
      this timeout.
    type: duration
    default: 200ms
    validations:
      - duration
      - nonempty
    advanced: true
  - name: BatchSize
    summary: The size of a batch.
    description: |
      The size of a batch, measured by span/datapoint/log record count. Once a batch reaches this size it will be sent.
    type: int
    default: 8192
    validations:
      - nonempty
    advanced: true
  - name: QueueSize
    summary: The size of a exporting queue.
    description: |
      The size of the exporting queue, measured by span/datapoint/log record count.
      Items will be kept in the queue while the batch is being created.
    type: int
    default: 100_000
    validations:
      - nonempty
    advanced: true
templates:
  - kind: refinery_config
    name: HoneycombExporter_RefineryConfig
    format: dotted
    data:
      - key: Network.HoneycombAPI
        value: "{{ buildurl .Values.Insecure .Values.APIEndpoint .Values.APIPort }}"
      - key: AccessKeys.SendKey
        value: "{{ .Values.APIKey }}"
        suppress_if: '{{ eq "none" (or .Values.APIKey .User.APIKey) }}'
      - key: AccessKeys.SendKeyMode
        value: "{{ .Values.Mode }}"
  - kind: collector_config
    name: honeycombexporter_collector
    format: collector
    meta:
      componentSection: exporters
      signalTypes: [traces, metrics, logs]
      collectorComponentName: otlphttp
    data:
      - key: "{{ .ComponentName }}.endpoint"
        value: "{{ buildurl .Values.Insecure .Values.APIEndpoint .Values.APIPort }}"
      - key: "{{ .ComponentName }}.tls.insecure"
        value: "{{ .Values.Insecure | encodeAsBool }}"
        suppress_if: "{{ not .Values.Insecure }}"
      - key: "{{ .ComponentName }}.headers.x-honeycomb-team"
        value: "{{ .Values.APIKey }}"
      - key: "{{ .ComponentName }}.headers.x-honeycomb-dataset"
        value: "{{ .Values.MetricsDataset }}"
      - key: "{{ .ComponentName }}.sending_queue.enabled"
        value: "{{ true | encodeAsBool}}"
      - key: "{{ .ComponentName }}.sending_queue.sizer"
        value: "items"
      - key: "{{ .ComponentName }}.sending_queue.queue_size"
        value: "{{ .Values.QueueSize | encodeAsInt }}"
      - key: "{{ .ComponentName }}.sending_queue.batch.flush_timeout"
        value: "{{ .Values.BatchTimeout }}"
      - key: "{{ .ComponentName }}.sending_queue.batch.min_size"
        value: "{{ .Values.BatchSize | encodeAsInt }}"
      - key: "{{ .ComponentName }}.sending_queue.batch.max_size"
        value: "{{ .Values.BatchSize | encodeAsInt }}"
