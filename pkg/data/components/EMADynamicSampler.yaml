kind: EMADynamicSampler
name: Sample Proportionally by Key
version: v0.1.0
style: sampler
type: base
status: alpha
summary: An Exponential Moving Average (EMA) sampler designed to achieve a target Sample Rate.
description: |-
  This is an Exponential Moving Average (EMA) sampler designed to achieve a target sample rate based
  on trying to achieve representative quantities of the specified sampling keys. The keys should be
  chosen from fields with relatively low cardinality, such as HTTP method, status code, etc.
tags:
  - category:sampler
  - service:refinery
  - signal:HoneycombEvents
  - sampler:ema
  - sampler:dynamic
  - input:SampleData
  - output:Events
ports:
  # inputs
  - name: Sample
    direction: input
    type: SampleData
  # outputs
  - name: Events
    direction: output
    type: HoneycombEvents
    note: "The traces that are sampled (retained for further processing)"
properties:
  - name: GoalSampleRate
    summary: The target sample rate to achieve.
    description: |
      The desired sample rate to achieve. Note that this is a target, and the
      actual throughput may vary. The accuracy of this sampler is heavily
      dependent on 1. the type and volume of traffic; 2. the cardinality and
      distribution of the sampling keys per AdjustmentInterval; 3. the
      AdjustmentInterval.
    type: int
    validations:
      - positive
    default: 100
  - name: AdjustmentInterval
    summary: The interval (in seconds) between adjustments of the sampling rate
    description: |
      The interval (in seconds) at which to adjust the sampling rate. This
      is the time window over which the sampler will adjust the sampling
      rate to try to achieve the target throughput. The smaller the
      interval, the more responsive the sampler will be to changes in
      traffic patterns, but the more volatile the sampling rate will be.
    type: int
    validations:
      - positive
    default: 60
    advanced: true
  - name: FieldList
    summary: The field names of the keys to use for controlling sampling
    description: |
      The field names of keys to use for sampling. These should be chosen
      from fields with relatively low cardinality, such as HTTP method,
      status code, etc. The sampler will try to achieve representative
      quantities of the specified sampling keys, while ensuring that at least
      one instance of every distinct value of each key is sampled.
      There is no default; this field must be specified.
    type: stringarray
    validations:
      - noblanks
      - nonempty
    default: []
  - name: MaxKeys
    summary: The maximum number of distinct keys the sampler tracks
    description: |
      The maximum number of distinct keys the sampler tracks. This is used to limit
      the number of keys that are retained in the sampler's state that is used to
      compute the sampling rate.
      The default value is 500.
    type: int
    validations:
      - positive
    default: 500
    advanced: true
  - name: Weight
    summary: The weight to apply to the sampling rate adjustment
    description: |
      The weight to apply to the sampling rate adjustment. This controls how
      aggressively the sampler adjusts the sampling rate in response to
      changes in traffic patterns. A higher weight will result in more
      aggressive adjustments, while a lower weight will result in more
      conservative adjustments.
      The default value is 0.5.
    type: float
    validations:
      - inrange(0.0, 1.0)
    default: 0.5
    advanced: true
  - name: AgeOutValue
    summary: The value to use for aging out old keys
    description: |
      The value to use for aging out old keys. This controls how aggressively
      the sampler will remove old keys from its state. A higher value will
      result in more aggressive aging out, while a lower value will result in
      more conservative aging out.
      The default value is 0.5.
    type: float
    validations:
      - inrange(0.0, 1.0)
    default: 0.5
    advanced: true
  - name: BurstMultiple
    summary: The burst multiple to use for sampling
    description: |
      The burst multiple to use for sampling. This controls how much the
      sampler is allowed to "burst" above the target sample rate in order
      to capture short-lived spikes in traffic. A higher burst multiple
      will allow for more aggressive bursting, while a lower burst multiple
      will result in more conservative bursting.
      The default value is 1.0.
    type: float
    validations:
      - positive
    default: 2.0
    advanced: true
  - name: BurstDetectionDelay
    summary: the number of `AdjustmentIntervals` to wait before detecting bursts.
    description: |
      Indicates the number of intervals to run before burst detection kicks in.
      Defaults value is `3`.
    type: int
    validations:
      - positive
    default: 3
    advanced: true
templates:
  - kind: refinery_rules
    name: EMA_Dynamic_Rules
    format: rules
    meta:
      env: "__default__"
      sampler: EMADynamicSampler
    data:
      - key: GoalSampleRate
        value: "{{ .Values.GoalSampleRate | encodeAsInt }}"
      - key: FieldList
        value: "{{ .Values.FieldList | encodeAsArray }}"
      # properties are suppressed if defaults are used
      - key: AdjustmentInterval
        value: "{{ .Values.AdjustmentInterval }}s"
        suppress_if: "{{ eq .Values.AdjustmentInterval 60 }}"
      - key: MaxKeys
        value: "{{ .Values.MaxKeys | encodeAsInt }}"
        suppress_if: "{{ eq .Values.MaxKeys 500 }}"
      - key: Weight
        value: "{{ .Values.Weight | encodeAsFloat }}"
        suppress_if: "{{ eq .Values.Weight 0.5 }}"
      - key: AgeOutValue
        value: "{{ .Values.AgeOutValue | encodeAsFloat }}"
        suppress_if: "{{ eq .Values.AgeOutValue 0.5 }}"
      - key: BurstMultiple
        value: "{{ .Values.BurstMultiple | encodeAsFloat }}"
        suppress_if: "{{ or (eq .Values.BurstMultiple 0.0) (eq .Values.BurstMultiple 2.0) }}"
      - key: BurstDetectionDelay
        value: "{{ .Values.BurstDetectionDelay | encodeAsInt }}"
        suppress_if: "{{ eq .Values.BurstDetectionDelay 3 }}"
